var FFI = require('ffi'),
    Struct = require('ref-struct'),
    ref = require('ref');
exports.CONSTANTS = {
    CXDiagnosticSeverity: {
        '0': 'CXDiagnostic_Ignored',
        '1': 'CXDiagnostic_Note',
        '2': 'CXDiagnostic_Warning',
        '3': 'CXDiagnostic_Error',
        '4': 'CXDiagnostic_Fatal',
        CXDiagnostic_Ignored: 0,
        CXDiagnostic_Note: 1,
        CXDiagnostic_Warning: 2,
        CXDiagnostic_Error: 3,
        CXDiagnostic_Fatal: 4
    },
    CXTUResourceUsageKind: {
        '1': 'CXTUResourceUsage_First',
        '2': 'CXTUResourceUsage_Identifiers',
        '3': 'CXTUResourceUsage_Selectors',
        '4': 'CXTUResourceUsage_GlobalCompletionResults',
        '5': 'CXTUResourceUsage_SourceManagerContentCache',
        '6': 'CXTUResourceUsage_AST_SideTables',
        '7': 'CXTUResourceUsage_SourceManager_Membuffer_Malloc',
        '8': 'CXTUResourceUsage_SourceManager_Membuffer_MMap',
        '9': 'CXTUResourceUsage_ExternalASTSource_Membuffer_Malloc',
        '10': 'CXTUResourceUsage_ExternalASTSource_Membuffer_MMap',
        '11': 'CXTUResourceUsage_Preprocessor',
        '12': 'CXTUResourceUsage_PreprocessingRecord',
        '13': 'CXTUResourceUsage_SourceManager_DataStructures',
        '14': 'CXTUResourceUsage_Last',
        CXTUResourceUsage_AST: 1,
        CXTUResourceUsage_Identifiers: 2,
        CXTUResourceUsage_Selectors: 3,
        CXTUResourceUsage_GlobalCompletionResults: 4,
        CXTUResourceUsage_SourceManagerContentCache: 5,
        CXTUResourceUsage_AST_SideTables: 6,
        CXTUResourceUsage_SourceManager_Membuffer_Malloc: 7,
        CXTUResourceUsage_SourceManager_Membuffer_MMap: 8,
        CXTUResourceUsage_ExternalASTSource_Membuffer_Malloc: 9,
        CXTUResourceUsage_ExternalASTSource_Membuffer_MMap: 10,
        CXTUResourceUsage_Preprocessor: 11,
        CXTUResourceUsage_PreprocessingRecord: 12,
        CXTUResourceUsage_SourceManager_DataStructures: 13,
        CXTUResourceUsage_Preprocessor_HeaderSearch: 14,
        CXTUResourceUsage_MEMORY_IN_BYTES_BEGIN: 1,
        CXTUResourceUsage_MEMORY_IN_BYTES_END: 14,
        CXTUResourceUsage_First: 1,
        CXTUResourceUsage_Last: 14
    },
    CXCursorKind: {
        '1': 'CXCursor_FirstDecl',
        '2': 'CXCursor_StructDecl',
        '3': 'CXCursor_UnionDecl',
        '4': 'CXCursor_ClassDecl',
        '5': 'CXCursor_EnumDecl',
        '6': 'CXCursor_FieldDecl',
        '7': 'CXCursor_EnumConstantDecl',
        '8': 'CXCursor_FunctionDecl',
        '9': 'CXCursor_VarDecl',
        '10': 'CXCursor_ParmDecl',
        '11': 'CXCursor_ObjCInterfaceDecl',
        '12': 'CXCursor_ObjCCategoryDecl',
        '13': 'CXCursor_ObjCProtocolDecl',
        '14': 'CXCursor_ObjCPropertyDecl',
        '15': 'CXCursor_ObjCIvarDecl',
        '16': 'CXCursor_ObjCInstanceMethodDecl',
        '17': 'CXCursor_ObjCClassMethodDecl',
        '18': 'CXCursor_ObjCImplementationDecl',
        '19': 'CXCursor_ObjCCategoryImplDecl',
        '20': 'CXCursor_TypedefDecl',
        '21': 'CXCursor_CXXMethod',
        '22': 'CXCursor_Namespace',
        '23': 'CXCursor_LinkageSpec',
        '24': 'CXCursor_Constructor',
        '25': 'CXCursor_Destructor',
        '26': 'CXCursor_ConversionFunction',
        '27': 'CXCursor_TemplateTypeParameter',
        '28': 'CXCursor_NonTypeTemplateParameter',
        '29': 'CXCursor_TemplateTemplateParameter',
        '30': 'CXCursor_FunctionTemplate',
        '31': 'CXCursor_ClassTemplate',
        '32': 'CXCursor_ClassTemplatePartialSpecialization',
        '33': 'CXCursor_NamespaceAlias',
        '34': 'CXCursor_UsingDirective',
        '35': 'CXCursor_UsingDeclaration',
        '36': 'CXCursor_TypeAliasDecl',
        '37': 'CXCursor_ObjCSynthesizeDecl',
        '38': 'CXCursor_ObjCDynamicDecl',
        '39': 'CXCursor_LastDecl',
        '40': 'CXCursor_ObjCSuperClassRef',
        '41': 'CXCursor_ObjCProtocolRef',
        '42': 'CXCursor_ObjCClassRef',
        '43': 'CXCursor_TypeRef',
        '44': 'CXCursor_CXXBaseSpecifier',
        '45': 'CXCursor_TemplateRef',
        '46': 'CXCursor_NamespaceRef',
        '47': 'CXCursor_MemberRef',
        '48': 'CXCursor_LabelRef',
        '49': 'CXCursor_OverloadedDeclRef',
        '50': 'CXCursor_LastRef',
        '70': 'CXCursor_InvalidFile',
        '71': 'CXCursor_NoDeclFound',
        '72': 'CXCursor_NotImplemented',
        '73': 'CXCursor_LastInvalid',
        '100': 'CXCursor_UnexposedExpr',
        '101': 'CXCursor_DeclRefExpr',
        '102': 'CXCursor_MemberRefExpr',
        '103': 'CXCursor_CallExpr',
        '104': 'CXCursor_ObjCMessageExpr',
        '105': 'CXCursor_BlockExpr',
        '106': 'CXCursor_IntegerLiteral',
        '107': 'CXCursor_FloatingLiteral',
        '108': 'CXCursor_ImaginaryLiteral',
        '109': 'CXCursor_StringLiteral',
        '110': 'CXCursor_CharacterLiteral',
        '111': 'CXCursor_ParenExpr',
        '112': 'CXCursor_UnaryOperator',
        '113': 'CXCursor_ArraySubscriptExpr',
        '114': 'CXCursor_BinaryOperator',
        '115': 'CXCursor_CompoundAssignOperator',
        '116': 'CXCursor_ConditionalOperator',
        '117': 'CXCursor_CStyleCastExpr',
        '118': 'CXCursor_CompoundLiteralExpr',
        '119': 'CXCursor_InitListExpr',
        '120': 'CXCursor_AddrLabelExpr',
        '121': 'CXCursor_StmtExpr',
        '122': 'CXCursor_GenericSelectionExpr',
        '123': 'CXCursor_GNUNullExpr',
        '124': 'CXCursor_CXXStaticCastExpr',
        '125': 'CXCursor_CXXDynamicCastExpr',
        '126': 'CXCursor_CXXReinterpretCastExpr',
        '127': 'CXCursor_CXXConstCastExpr',
        '128': 'CXCursor_CXXFunctionalCastExpr',
        '129': 'CXCursor_CXXTypeidExpr',
        '130': 'CXCursor_CXXBoolLiteralExpr',
        '131': 'CXCursor_CXXNullPtrLiteralExpr',
        '132': 'CXCursor_CXXThisExpr',
        '133': 'CXCursor_CXXThrowExpr',
        '134': 'CXCursor_CXXNewExpr',
        '135': 'CXCursor_CXXDeleteExpr',
        '136': 'CXCursor_UnaryExpr',
        '137': 'CXCursor_ObjCStringLiteral',
        '138': 'CXCursor_ObjCEncodeExpr',
        '139': 'CXCursor_ObjCSelectorExpr',
        '140': 'CXCursor_ObjCProtocolExpr',
        '141': 'CXCursor_ObjCBridgedCastExpr',
        '142': 'CXCursor_PackExpansionExpr',
        '143': 'CXCursor_SizeOfPackExpr',
        '144': 'CXCursor_LambdaExpr',
        '145': 'CXCursor_LastExpr',
        '200': 'CXCursor_UnexposedStmt',
        '201': 'CXCursor_LabelStmt',
        '202': 'CXCursor_CompoundStmt',
        '203': 'CXCursor_CaseStmt',
        '204': 'CXCursor_DefaultStmt',
        '205': 'CXCursor_IfStmt',
        '206': 'CXCursor_SwitchStmt',
        '207': 'CXCursor_WhileStmt',
        '208': 'CXCursor_DoStmt',
        '209': 'CXCursor_ForStmt',
        '210': 'CXCursor_GotoStmt',
        '211': 'CXCursor_IndirectGotoStmt',
        '212': 'CXCursor_ContinueStmt',
        '213': 'CXCursor_BreakStmt',
        '214': 'CXCursor_ReturnStmt',
        '215': 'CXCursor_AsmStmt',
        '216': 'CXCursor_ObjCAtTryStmt',
        '217': 'CXCursor_ObjCAtCatchStmt',
        '218': 'CXCursor_ObjCAtFinallyStmt',
        '219': 'CXCursor_ObjCAtThrowStmt',
        '220': 'CXCursor_ObjCAtSynchronizedStmt',
        '221': 'CXCursor_ObjCAutoreleasePoolStmt',
        '222': 'CXCursor_ObjCForCollectionStmt',
        '223': 'CXCursor_CXXCatchStmt',
        '224': 'CXCursor_CXXTryStmt',
        '225': 'CXCursor_CXXForRangeStmt',
        '226': 'CXCursor_SEHTryStmt',
        '227': 'CXCursor_SEHExceptStmt',
        '228': 'CXCursor_SEHFinallyStmt',
        '230': 'CXCursor_NullStmt',
        '231': 'CXCursor_LastStmt',
        '300': 'CXCursor_TranslationUnit',
        '400': 'CXCursor_UnexposedAttr',
        '401': 'CXCursor_IBActionAttr',
        '402': 'CXCursor_IBOutletAttr',
        '403': 'CXCursor_IBOutletCollectionAttr',
        '404': 'CXCursor_CXXFinalAttr',
        '405': 'CXCursor_CXXOverrideAttr',
        '406': 'CXCursor_AnnotateAttr',
        '407': 'CXCursor_LastAttr',
        '500': 'CXCursor_FirstPreprocessing',
        '501': 'CXCursor_MacroDefinition',
        '502': 'CXCursor_MacroInstantiation',
        '503': 'CXCursor_LastPreprocessing',
        CXCursor_UnexposedDecl: 1,
        CXCursor_StructDecl: 2,
        CXCursor_UnionDecl: 3,
        CXCursor_ClassDecl: 4,
        CXCursor_EnumDecl: 5,
        CXCursor_FieldDecl: 6,
        CXCursor_EnumConstantDecl: 7,
        CXCursor_FunctionDecl: 8,
        CXCursor_VarDecl: 9,
        CXCursor_ParmDecl: 10,
        CXCursor_ObjCInterfaceDecl: 11,
        CXCursor_ObjCCategoryDecl: 12,
        CXCursor_ObjCProtocolDecl: 13,
        CXCursor_ObjCPropertyDecl: 14,
        CXCursor_ObjCIvarDecl: 15,
        CXCursor_ObjCInstanceMethodDecl: 16,
        CXCursor_ObjCClassMethodDecl: 17,
        CXCursor_ObjCImplementationDecl: 18,
        CXCursor_ObjCCategoryImplDecl: 19,
        CXCursor_TypedefDecl: 20,
        CXCursor_CXXMethod: 21,
        CXCursor_Namespace: 22,
        CXCursor_LinkageSpec: 23,
        CXCursor_Constructor: 24,
        CXCursor_Destructor: 25,
        CXCursor_ConversionFunction: 26,
        CXCursor_TemplateTypeParameter: 27,
        CXCursor_NonTypeTemplateParameter: 28,
        CXCursor_TemplateTemplateParameter: 29,
        CXCursor_FunctionTemplate: 30,
        CXCursor_ClassTemplate: 31,
        CXCursor_ClassTemplatePartialSpecialization: 32,
        CXCursor_NamespaceAlias: 33,
        CXCursor_UsingDirective: 34,
        CXCursor_UsingDeclaration: 35,
        CXCursor_TypeAliasDecl: 36,
        CXCursor_ObjCSynthesizeDecl: 37,
        CXCursor_ObjCDynamicDecl: 38,
        CXCursor_CXXAccessSpecifier: 39,
        CXCursor_FirstDecl: 1,
        CXCursor_LastDecl: 39,
        CXCursor_FirstRef: 40,
        CXCursor_ObjCSuperClassRef: 40,
        CXCursor_ObjCProtocolRef: 41,
        CXCursor_ObjCClassRef: 42,
        CXCursor_TypeRef: 43,
        CXCursor_CXXBaseSpecifier: 44,
        CXCursor_TemplateRef: 45,
        CXCursor_NamespaceRef: 46,
        CXCursor_MemberRef: 47,
        CXCursor_LabelRef: 48,
        CXCursor_OverloadedDeclRef: 49,
        CXCursor_VariableRef: 50,
        CXCursor_LastRef: 50,
        CXCursor_FirstInvalid: 70,
        CXCursor_InvalidFile: 70,
        CXCursor_NoDeclFound: 71,
        CXCursor_NotImplemented: 72,
        CXCursor_InvalidCode: 73,
        CXCursor_LastInvalid: 73,
        CXCursor_FirstExpr: 100,
        CXCursor_UnexposedExpr: 100,
        CXCursor_DeclRefExpr: 101,
        CXCursor_MemberRefExpr: 102,
        CXCursor_CallExpr: 103,
        CXCursor_ObjCMessageExpr: 104,
        CXCursor_BlockExpr: 105,
        CXCursor_IntegerLiteral: 106,
        CXCursor_FloatingLiteral: 107,
        CXCursor_ImaginaryLiteral: 108,
        CXCursor_StringLiteral: 109,
        CXCursor_CharacterLiteral: 110,
        CXCursor_ParenExpr: 111,
        CXCursor_UnaryOperator: 112,
        CXCursor_ArraySubscriptExpr: 113,
        CXCursor_BinaryOperator: 114,
        CXCursor_CompoundAssignOperator: 115,
        CXCursor_ConditionalOperator: 116,
        CXCursor_CStyleCastExpr: 117,
        CXCursor_CompoundLiteralExpr: 118,
        CXCursor_InitListExpr: 119,
        CXCursor_AddrLabelExpr: 120,
        CXCursor_StmtExpr: 121,
        CXCursor_GenericSelectionExpr: 122,
        CXCursor_GNUNullExpr: 123,
        CXCursor_CXXStaticCastExpr: 124,
        CXCursor_CXXDynamicCastExpr: 125,
        CXCursor_CXXReinterpretCastExpr: 126,
        CXCursor_CXXConstCastExpr: 127,
        CXCursor_CXXFunctionalCastExpr: 128,
        CXCursor_CXXTypeidExpr: 129,
        CXCursor_CXXBoolLiteralExpr: 130,
        CXCursor_CXXNullPtrLiteralExpr: 131,
        CXCursor_CXXThisExpr: 132,
        CXCursor_CXXThrowExpr: 133,
        CXCursor_CXXNewExpr: 134,
        CXCursor_CXXDeleteExpr: 135,
        CXCursor_UnaryExpr: 136,
        CXCursor_ObjCStringLiteral: 137,
        CXCursor_ObjCEncodeExpr: 138,
        CXCursor_ObjCSelectorExpr: 139,
        CXCursor_ObjCProtocolExpr: 140,
        CXCursor_ObjCBridgedCastExpr: 141,
        CXCursor_PackExpansionExpr: 142,
        CXCursor_SizeOfPackExpr: 143,
        CXCursor_LambdaExpr: 144,
        CXCursor_ObjCBoolLiteralExpr: 145,
        CXCursor_LastExpr: 145,
        CXCursor_FirstStmt: 200,
        CXCursor_UnexposedStmt: 200,
        CXCursor_LabelStmt: 201,
        CXCursor_CompoundStmt: 202,
        CXCursor_CaseStmt: 203,
        CXCursor_DefaultStmt: 204,
        CXCursor_IfStmt: 205,
        CXCursor_SwitchStmt: 206,
        CXCursor_WhileStmt: 207,
        CXCursor_DoStmt: 208,
        CXCursor_ForStmt: 209,
        CXCursor_GotoStmt: 210,
        CXCursor_IndirectGotoStmt: 211,
        CXCursor_ContinueStmt: 212,
        CXCursor_BreakStmt: 213,
        CXCursor_ReturnStmt: 214,
        CXCursor_AsmStmt: 215,
        CXCursor_ObjCAtTryStmt: 216,
        CXCursor_ObjCAtCatchStmt: 217,
        CXCursor_ObjCAtFinallyStmt: 218,
        CXCursor_ObjCAtThrowStmt: 219,
        CXCursor_ObjCAtSynchronizedStmt: 220,
        CXCursor_ObjCAutoreleasePoolStmt: 221,
        CXCursor_ObjCForCollectionStmt: 222,
        CXCursor_CXXCatchStmt: 223,
        CXCursor_CXXTryStmt: 224,
        CXCursor_CXXForRangeStmt: 225,
        CXCursor_SEHTryStmt: 226,
        CXCursor_SEHExceptStmt: 227,
        CXCursor_SEHFinallyStmt: 228,
        CXCursor_NullStmt: 230,
        CXCursor_DeclStmt: 231,
        CXCursor_LastStmt: 231,
        CXCursor_TranslationUnit: 300,
        CXCursor_FirstAttr: 400,
        CXCursor_UnexposedAttr: 400,
        CXCursor_IBActionAttr: 401,
        CXCursor_IBOutletAttr: 402,
        CXCursor_IBOutletCollectionAttr: 403,
        CXCursor_CXXFinalAttr: 404,
        CXCursor_CXXOverrideAttr: 405,
        CXCursor_AnnotateAttr: 406,
        CXCursor_AsmLabelAttr: 407,
        CXCursor_LastAttr: 407,
        CXCursor_PreprocessingDirective: 500,
        CXCursor_MacroDefinition: 501,
        CXCursor_MacroExpansion: 502,
        CXCursor_MacroInstantiation: 502,
        CXCursor_InclusionDirective: 503,
        CXCursor_FirstPreprocessing: 500,
        CXCursor_LastPreprocessing: 503
    },
    CXLinkageKind: {
        '0': 'CXLinkage_Invalid',
        '1': 'CXLinkage_NoLinkage',
        '2': 'CXLinkage_Internal',
        '3': 'CXLinkage_UniqueExternal',
        '4': 'CXLinkage_External',
        CXLinkage_Invalid: 0,
        CXLinkage_NoLinkage: 1,
        CXLinkage_Internal: 2,
        CXLinkage_UniqueExternal: 3,
        CXLinkage_External: 4
    },
    CXAvailabilityKind: {
        '0': 'CXAvailability_Available',
        '1': 'CXAvailability_Deprecated',
        '2': 'CXAvailability_NotAvailable',
        '3': 'CXAvailability_NotAccessible',
        CXAvailability_Available: 0,
        CXAvailability_Deprecated: 1,
        CXAvailability_NotAvailable: 2,
        CXAvailability_NotAccessible: 3
    },
    CXLanguageKind: {
        '0': 'CXLanguage_Invalid',
        '1': 'CXLanguage_C',
        '2': 'CXLanguage_ObjC',
        '3': 'CXLanguage_CPlusPlus',
        CXLanguage_Invalid: 0,
        CXLanguage_C: 1,
        CXLanguage_ObjC: 2,
        CXLanguage_CPlusPlus: 3
    },
    CXTypeKind: {
        '0': 'CXType_Invalid',
        '1': 'CXType_Unexposed',
        '2': 'CXType_FirstBuiltin',
        '3': 'CXType_Bool',
        '4': 'CXType_Char_U',
        '5': 'CXType_UChar',
        '6': 'CXType_Char16',
        '7': 'CXType_Char32',
        '8': 'CXType_UShort',
        '9': 'CXType_UInt',
        '10': 'CXType_ULong',
        '11': 'CXType_ULongLong',
        '12': 'CXType_UInt128',
        '13': 'CXType_Char_S',
        '14': 'CXType_SChar',
        '15': 'CXType_WChar',
        '16': 'CXType_Short',
        '17': 'CXType_Int',
        '18': 'CXType_Long',
        '19': 'CXType_LongLong',
        '20': 'CXType_Int128',
        '21': 'CXType_Float',
        '22': 'CXType_Double',
        '23': 'CXType_LongDouble',
        '24': 'CXType_NullPtr',
        '25': 'CXType_Overload',
        '26': 'CXType_Dependent',
        '27': 'CXType_ObjCId',
        '28': 'CXType_ObjCClass',
        '29': 'CXType_LastBuiltin',
        '100': 'CXType_Complex',
        '101': 'CXType_Pointer',
        '102': 'CXType_BlockPointer',
        '103': 'CXType_LValueReference',
        '104': 'CXType_RValueReference',
        '105': 'CXType_Record',
        '106': 'CXType_Enum',
        '107': 'CXType_Typedef',
        '108': 'CXType_ObjCInterface',
        '109': 'CXType_ObjCObjectPointer',
        '110': 'CXType_FunctionNoProto',
        '111': 'CXType_FunctionProto',
        '112': 'CXType_ConstantArray',
        '113': 'CXType_Vector',
        CXType_Invalid: 0,
        CXType_Unexposed: 1,
        CXType_Void: 2,
        CXType_Bool: 3,
        CXType_Char_U: 4,
        CXType_UChar: 5,
        CXType_Char16: 6,
        CXType_Char32: 7,
        CXType_UShort: 8,
        CXType_UInt: 9,
        CXType_ULong: 10,
        CXType_ULongLong: 11,
        CXType_UInt128: 12,
        CXType_Char_S: 13,
        CXType_SChar: 14,
        CXType_WChar: 15,
        CXType_Short: 16,
        CXType_Int: 17,
        CXType_Long: 18,
        CXType_LongLong: 19,
        CXType_Int128: 20,
        CXType_Float: 21,
        CXType_Double: 22,
        CXType_LongDouble: 23,
        CXType_NullPtr: 24,
        CXType_Overload: 25,
        CXType_Dependent: 26,
        CXType_ObjCId: 27,
        CXType_ObjCClass: 28,
        CXType_ObjCSel: 29,
        CXType_FirstBuiltin: 2,
        CXType_LastBuiltin: 29,
        CXType_Complex: 100,
        CXType_Pointer: 101,
        CXType_BlockPointer: 102,
        CXType_LValueReference: 103,
        CXType_RValueReference: 104,
        CXType_Record: 105,
        CXType_Enum: 106,
        CXType_Typedef: 107,
        CXType_ObjCInterface: 108,
        CXType_ObjCObjectPointer: 109,
        CXType_FunctionNoProto: 110,
        CXType_FunctionProto: 111,
        CXType_ConstantArray: 112,
        CXType_Vector: 113
    },
    CXCallingConv: {
        '0': 'CXCallingConv_Default',
        '1': 'CXCallingConv_C',
        '2': 'CXCallingConv_X86StdCall',
        '3': 'CXCallingConv_X86FastCall',
        '4': 'CXCallingConv_X86ThisCall',
        '5': 'CXCallingConv_X86Pascal',
        '6': 'CXCallingConv_AAPCS',
        '7': 'CXCallingConv_AAPCS_VFP',
        '100': 'CXCallingConv_Invalid',
        '200': 'CXCallingConv_Unexposed',
        CXCallingConv_Default: 0,
        CXCallingConv_C: 1,
        CXCallingConv_X86StdCall: 2,
        CXCallingConv_X86FastCall: 3,
        CXCallingConv_X86ThisCall: 4,
        CXCallingConv_X86Pascal: 5,
        CXCallingConv_AAPCS: 6,
        CXCallingConv_AAPCS_VFP: 7,
        CXCallingConv_Invalid: 100,
        CXCallingConv_Unexposed: 200
    },
    CX_CXXAccessSpecifier: {
        '0': 'CX_CXXInvalidAccessSpecifier',
        '1': 'CX_CXXPublic',
        '2': 'CX_CXXProtected',
        '3': 'CX_CXXPrivate',
        CX_CXXInvalidAccessSpecifier: 0,
        CX_CXXPublic: 1,
        CX_CXXProtected: 2,
        CX_CXXPrivate: 3
    },
    CXTokenKind: {
        '0': 'CXToken_Punctuation',
        '1': 'CXToken_Keyword',
        '2': 'CXToken_Identifier',
        '3': 'CXToken_Literal',
        '4': 'CXToken_Comment',
        CXToken_Punctuation: 0,
        CXToken_Keyword: 1,
        CXToken_Identifier: 2,
        CXToken_Literal: 3,
        CXToken_Comment: 4
    },
    CXCompletionChunkKind: {
        '0': 'CXCompletionChunk_Optional',
        '1': 'CXCompletionChunk_TypedText',
        '2': 'CXCompletionChunk_Text',
        '3': 'CXCompletionChunk_Placeholder',
        '4': 'CXCompletionChunk_Informative',
        '5': 'CXCompletionChunk_CurrentParameter',
        '6': 'CXCompletionChunk_LeftParen',
        '7': 'CXCompletionChunk_RightParen',
        '8': 'CXCompletionChunk_LeftBracket',
        '9': 'CXCompletionChunk_RightBracket',
        '10': 'CXCompletionChunk_LeftBrace',
        '11': 'CXCompletionChunk_RightBrace',
        '12': 'CXCompletionChunk_LeftAngle',
        '13': 'CXCompletionChunk_RightAngle',
        '14': 'CXCompletionChunk_Comma',
        '15': 'CXCompletionChunk_ResultType',
        '16': 'CXCompletionChunk_Colon',
        '17': 'CXCompletionChunk_SemiColon',
        '18': 'CXCompletionChunk_Equal',
        '19': 'CXCompletionChunk_HorizontalSpace',
        '20': 'CXCompletionChunk_VerticalSpace',
        CXCompletionChunk_Optional: 0,
        CXCompletionChunk_TypedText: 1,
        CXCompletionChunk_Text: 2,
        CXCompletionChunk_Placeholder: 3,
        CXCompletionChunk_Informative: 4,
        CXCompletionChunk_CurrentParameter: 5,
        CXCompletionChunk_LeftParen: 6,
        CXCompletionChunk_RightParen: 7,
        CXCompletionChunk_LeftBracket: 8,
        CXCompletionChunk_RightBracket: 9,
        CXCompletionChunk_LeftBrace: 10,
        CXCompletionChunk_RightBrace: 11,
        CXCompletionChunk_LeftAngle: 12,
        CXCompletionChunk_RightAngle: 13,
        CXCompletionChunk_Comma: 14,
        CXCompletionChunk_ResultType: 15,
        CXCompletionChunk_Colon: 16,
        CXCompletionChunk_SemiColon: 17,
        CXCompletionChunk_Equal: 18,
        CXCompletionChunk_HorizontalSpace: 19,
        CXCompletionChunk_VerticalSpace: 20
    },
    '': {
        '0': 'CXIdxAttr_Unexposed',
        '1': 'CXIdxAttr_IBAction',
        '2': 'CXIdxAttr_IBOutlet',
        '3': 'CXIdxAttr_IBOutletCollection',
        '4': 'CXIdxEntity_Field',
        '5': 'CXIdxEntity_EnumConstant',
        '6': 'CXIdxEntity_ObjCClass',
        '7': 'CXIdxEntity_ObjCProtocol',
        '8': 'CXIdxEntity_ObjCCategory',
        '9': 'CXIdxEntity_ObjCInstanceMethod',
        '10': 'CXIdxEntity_ObjCClassMethod',
        '11': 'CXIdxEntity_ObjCProperty',
        '12': 'CXIdxEntity_ObjCIvar',
        '13': 'CXIdxEntity_Enum',
        '14': 'CXIdxEntity_Struct',
        '15': 'CXIdxEntity_Union',
        '16': 'CXIdxEntity_CXXClass',
        '17': 'CXIdxEntity_CXXNamespace',
        '18': 'CXIdxEntity_CXXNamespaceAlias',
        '19': 'CXIdxEntity_CXXStaticVariable',
        '20': 'CXIdxEntity_CXXStaticMethod',
        '21': 'CXIdxEntity_CXXInstanceMethod',
        '22': 'CXIdxEntity_CXXConstructor',
        '23': 'CXIdxEntity_CXXDestructor',
        '24': 'CXIdxEntity_CXXConversionFunction',
        '25': 'CXIdxEntity_CXXTypeAlias',
        CXIdxEntity_Unexposed: 0,
        CXIdxEntity_Typedef: 1,
        CXIdxEntity_Function: 2,
        CXIdxEntity_Variable: 3,
        CXIdxEntity_Field: 4,
        CXIdxEntity_EnumConstant: 5,
        CXIdxEntity_ObjCClass: 6,
        CXIdxEntity_ObjCProtocol: 7,
        CXIdxEntity_ObjCCategory: 8,
        CXIdxEntity_ObjCInstanceMethod: 9,
        CXIdxEntity_ObjCClassMethod: 10,
        CXIdxEntity_ObjCProperty: 11,
        CXIdxEntity_ObjCIvar: 12,
        CXIdxEntity_Enum: 13,
        CXIdxEntity_Struct: 14,
        CXIdxEntity_Union: 15,
        CXIdxEntity_CXXClass: 16,
        CXIdxEntity_CXXNamespace: 17,
        CXIdxEntity_CXXNamespaceAlias: 18,
        CXIdxEntity_CXXStaticVariable: 19,
        CXIdxEntity_CXXStaticMethod: 20,
        CXIdxEntity_CXXInstanceMethod: 21,
        CXIdxEntity_CXXConstructor: 22,
        CXIdxEntity_CXXDestructor: 23,
        CXIdxEntity_CXXConversionFunction: 24,
        CXIdxEntity_CXXTypeAlias: 25,
        CXIdxEntity_NonTemplate: 0,
        CXIdxEntity_Template: 1,
        CXIdxEntity_TemplatePartialSpecialization: 2,
        CXIdxEntity_TemplateSpecialization: 3,
        CXIdxEntityLang_None: 0,
        CXIdxEntityLang_C: 1,
        CXIdxEntityLang_ObjC: 2,
        CXIdxEntityLang_CXX: 3,
        CXIdxObjCContainer_ForwardRef: 0,
        CXIdxObjCContainer_Interface: 1,
        CXIdxObjCContainer_Implementation: 2,
        CXIdxAttr_Unexposed: 0,
        CXIdxAttr_IBAction: 1,
        CXIdxAttr_IBOutlet: 2,
        CXIdxAttr_IBOutletCollection: 3
    }
};
var CXString = exports.CXString = Struct([
    ['pointer', 'data'],
    ['uint32', 'private_flags'], ]);
var CXStringPtr = exports.CXStringPtr = ref.refType(CXString);
var CXSourceLocation = exports.CXSourceLocation = Struct([
    ['pointer', 'ptr_data'],
    ['uint32', 'int_data'], ]);
var CXSourceLocationPtr = exports.CXSourceLocationPtr = ref.refType(CXSourceLocation);
var CXSourceRange = exports.CXSourceRange = Struct([
    ['pointer', 'ptr_data'],
    ['uint32', 'begin_int_data'],
    ['uint32', 'end_int_data'], ]);
var CXSourceRangePtr = exports.CXSourceRangePtr = ref.refType(CXSourceRange);
var CXTUResourceUsageEntry = exports.CXTUResourceUsageEntry = Struct([
    ['uint32', 'kind'],
    ['ulong', 'amount'], ]);
var CXTUResourceUsageEntryPtr = exports.CXTUResourceUsageEntryPtr = ref.refType(CXTUResourceUsageEntry);
var CXTUResourceUsage = exports.CXTUResourceUsage = Struct([
    ['pointer', 'data'],
    ['uint32', 'numEntries'],
    [CXTUResourceUsageEntryPtr, 'entries'], ]);
var CXTUResourceUsagePtr = exports.CXTUResourceUsagePtr = ref.refType(CXTUResourceUsage);
var CXCursor = exports.CXCursor = Struct([
    ['uint32', 'kind'],
    ['int32', 'xdata'],
    ['pointer', 'data1'],
    ['pointer', 'data2'],
    ['pointer', 'data3'],
]);
var CXCursorPtr = exports.CXCursorPtr = ref.refType(CXCursor);
var CXType = exports.CXType = Struct([
    ['uint32', 'kind'],
    ['pointer', 'data1'],
    ['pointer', 'data2'],
]);
var CXTypePtr = exports.CXTypePtr = ref.refType(CXType);
var CXCursorVisitorBlock = exports.CXCursorVisitorBlock = Struct([
    [CXCursor, 'cursor'],
    [CXCursor, 'parent'], ]);
var CXCursorVisitorBlockPtr = exports.CXCursorVisitorBlockPtr = ref.refType(CXCursorVisitorBlock);
var CXToken = exports.CXToken = Struct([
    ['pointer', 'int_data'],
    ['pointer', 'ptr_data'], ]);
var CXTokenPtr = exports.CXTokenPtr = ref.refType(CXToken);
var CXCompletionResult = exports.CXCompletionResult = Struct([
    ['uint32', 'CursorKind'],
    ['pointer', 'CompletionString'], ]);
var CXCompletionResultPtr = exports.CXCompletionResultPtr = ref.refType(CXCompletionResult);
var CXCodeCompleteResults = exports.CXCodeCompleteResults = Struct([
    [CXCompletionResultPtr, 'Results'],
    ['uint32', 'NumResults'], ]);
var CXCodeCompleteResultsPtr = exports.CXCodeCompleteResultsPtr = ref.refType(CXCodeCompleteResults);
var CXCursorAndRangeVisitor = exports.CXCursorAndRangeVisitor = Struct([
    ['pointer', 'context'],
    ['pointer', 'visit'], ]);
var CXCursorAndRangeVisitorPtr = exports.CXCursorAndRangeVisitorPtr = ref.refType(CXCursorAndRangeVisitor);
var CXIdxEntityInfo = exports.CXIdxEntityInfo = Struct([
    ['uint32', 'kind'],
    ['uint32', 'templateKind'],
    ['uint32', 'lang'],
    ['string', 'name'],
    ['string', 'USR'],
    [CXCursor, 'cursor'],
    ['pointer', 'attributes'],
    ['uint32', 'numAttributes'], ]);
var CXIdxEntityInfoPtr = exports.CXIdxEntityInfoPtr = ref.refType(CXIdxEntityInfo);
var CXIdxLoc = exports.CXIdxLoc = Struct([
    ['pointer', 'ptr_data'],
    ['uint32', 'int_data'], ]);
var CXIdxLocPtr = exports.CXIdxLocPtr = ref.refType(CXIdxLoc);
var CXIdxContainerInfo = exports.CXIdxContainerInfo = Struct([
    [CXCursor, 'cursor'], ]);
var CXIdxContainerInfoPtr = exports.CXIdxContainerInfoPtr = ref.refType(CXIdxContainerInfo);
var CXIdxDeclInfo = exports.CXIdxDeclInfo = Struct([
    [CXIdxEntityInfoPtr, 'entityInfo'],
    [CXCursor, 'cursor'],
    [CXIdxLoc, 'loc'],
    [CXIdxContainerInfoPtr, 'semanticContainer'],
    [CXIdxContainerInfoPtr, 'lexicalContainer'],
    ['int32', 'isRedeclaration'],
    ['int32', 'isDefinition'],
    ['int32', 'isContainer'],
    [CXIdxContainerInfoPtr, 'declAsContainer'],
    ['int32', 'isImplicit'],
    ['pointer', 'attributes'],
    ['uint32', 'numAttributes'], ]);
var CXIdxDeclInfoPtr = exports.CXIdxDeclInfoPtr = ref.refType(CXIdxDeclInfo);
var CXIdxObjCContainerDeclInfo = exports.CXIdxObjCContainerDeclInfo = Struct([
    [CXIdxDeclInfoPtr, 'declInfo'],
    ['uint32', 'kind'], ]);
var CXIdxObjCContainerDeclInfoPtr = exports.CXIdxObjCContainerDeclInfoPtr = ref.refType(CXIdxObjCContainerDeclInfo);
var CXIdxBaseClassInfo = exports.CXIdxBaseClassInfo = Struct([
    [CXIdxEntityInfoPtr, 'base'],
    [CXCursor, 'cursor'],
    [CXIdxLoc, 'loc'], ]);
var CXIdxBaseClassInfoPtr = exports.CXIdxBaseClassInfoPtr = ref.refType(CXIdxBaseClassInfo);
var CXIdxObjCProtocolRefListInfo = exports.CXIdxObjCProtocolRefListInfo = Struct([
    ['pointer', 'protocols'],
    ['uint32', 'numProtocols'], ]);
var CXIdxObjCProtocolRefListInfoPtr = exports.CXIdxObjCProtocolRefListInfoPtr = ref.refType(CXIdxObjCProtocolRefListInfo);
var CXIdxObjCInterfaceDeclInfo = exports.CXIdxObjCInterfaceDeclInfo = Struct([
    [CXIdxObjCContainerDeclInfoPtr, 'containerInfo'],
    [CXIdxBaseClassInfoPtr, 'superInfo'],
    [CXIdxObjCProtocolRefListInfoPtr, 'protocols'], ]);
var CXIdxObjCInterfaceDeclInfoPtr = exports.CXIdxObjCInterfaceDeclInfoPtr = ref.refType(CXIdxObjCInterfaceDeclInfo);
var CXIdxObjCCategoryDeclInfo = exports.CXIdxObjCCategoryDeclInfo = Struct([
    [CXIdxObjCContainerDeclInfoPtr, 'containerInfo'],
    [CXIdxEntityInfoPtr, 'objcClass'],
    [CXCursor, 'classCursor'],
    [CXIdxLoc, 'classLoc'],
    [CXIdxObjCProtocolRefListInfoPtr, 'protocols'], ]);
var CXIdxObjCCategoryDeclInfoPtr = exports.CXIdxObjCCategoryDeclInfoPtr = ref.refType(CXIdxObjCCategoryDeclInfo);
var CXIdxObjCPropertyDeclInfo = exports.CXIdxObjCPropertyDeclInfo = Struct([
    [CXIdxDeclInfoPtr, 'declInfo'],
    [CXIdxEntityInfoPtr, 'getter'],
    [CXIdxEntityInfoPtr, 'setter'], ]);
var CXIdxObjCPropertyDeclInfoPtr = exports.CXIdxObjCPropertyDeclInfoPtr = ref.refType(CXIdxObjCPropertyDeclInfo);
var CXIdxAttrInfo = exports.CXIdxAttrInfo = Struct([
    ['uint32', 'kind'],
    [CXCursor, 'cursor'],
    [CXIdxLoc, 'loc'], ]);
var CXIdxAttrInfoPtr = exports.CXIdxAttrInfoPtr = ref.refType(CXIdxAttrInfo);
var CXIdxIBOutletCollectionAttrInfo = exports.CXIdxIBOutletCollectionAttrInfo = Struct([
    [CXIdxAttrInfoPtr, 'attrInfo'],
    [CXIdxEntityInfoPtr, 'objcClass'],
    [CXCursor, 'classCursor'],
    [CXIdxLoc, 'classLoc'], ]);
var CXIdxIBOutletCollectionAttrInfoPtr = exports.CXIdxIBOutletCollectionAttrInfoPtr = ref.refType(CXIdxIBOutletCollectionAttrInfo);
var CXIdxCXXClassDeclInfo = exports.CXIdxCXXClassDeclInfo = Struct([
    [CXIdxDeclInfoPtr, 'declInfo'],
    ['pointer', 'bases'],
    ['uint32', 'numBases'], ]);
var CXIdxCXXClassDeclInfoPtr = exports.CXIdxCXXClassDeclInfoPtr = ref.refType(CXIdxCXXClassDeclInfo);
var IndexerCallbacks = exports.IndexerCallbacks = Struct([
    ['pointer', 'abortQuery'],
    ['pointer', 'diagnostic'],
    ['pointer', 'enteredMainFile'],
    ['pointer', 'ppIncludedFile'],
    ['pointer', 'importedASTFile'],
    ['pointer', 'startedTranslationUnit'],
    ['pointer', 'indexDeclaration'],
    ['pointer', 'indexEntityReference'], ]);
var IndexerCallbacksPtr = exports.IndexerCallbacksPtr = ref.refType(IndexerCallbacks);
exports.libclang = new FFI.Library('libclang', {
    clang_getCString: ['string', [CXString]],
    clang_disposeString: ['void', [CXString]],
    clang_createIndex: ['pointer', ['int32', 'int32']],
    clang_disposeIndex: ['void', ['pointer']],
    clang_CXIndex_setGlobalOptions: ['void', ['pointer', 'uint32']],
    clang_CXIndex_getGlobalOptions: ['uint32', ['pointer']],
    clang_getFileName: [CXString, ['pointer']],
    clang_getFileTime: ['long', ['pointer']],
    clang_isFileMultipleIncludeGuarded: ['uint32', ['pointer', 'pointer']],
    clang_getFile: ['pointer', ['pointer', 'string']],
    clang_getNullLocation: [CXSourceLocation, []],
    clang_equalLocations: ['uint32', [CXSourceLocation, CXSourceLocation]],
    clang_getLocation: [CXSourceLocation, ['pointer', 'pointer', 'uint32', 'uint32']],
    clang_getLocationForOffset: [CXSourceLocation, ['pointer', 'pointer', 'uint32']],
    clang_getNullRange: [CXSourceRange, []],
    clang_getRange: [CXSourceRange, [CXSourceLocation, CXSourceLocation]],
    clang_equalRanges: ['uint32', [CXSourceRange, CXSourceRange]],
    clang_Range_isNull: ['int32', [CXSourceRange]],
    clang_getExpansionLocation: ['void', [CXSourceLocation, 'pointer', 'pointer', 'pointer', 'pointer']],
    clang_getPresumedLocation: ['void', [CXSourceLocation, CXStringPtr, 'pointer', 'pointer']],
    clang_getInstantiationLocation: ['void', [CXSourceLocation, 'pointer', 'pointer', 'pointer', 'pointer']],
    clang_getSpellingLocation: ['void', [CXSourceLocation, 'pointer', 'pointer', 'pointer', 'pointer']],
    clang_getRangeStart: [CXSourceLocation, [CXSourceRange]],
    clang_getRangeEnd: [CXSourceLocation, [CXSourceRange]],
    clang_getNumDiagnosticsInSet: ['uint32', ['pointer']],
    clang_getDiagnosticInSet: ['pointer', ['pointer', 'uint32']],
    clang_loadDiagnostics: ['pointer', ['string', 'pointer', CXStringPtr]],
    clang_disposeDiagnosticSet: ['void', ['pointer']],
    clang_getChildDiagnostics: ['pointer', ['pointer']],
    clang_getNumDiagnostics: ['uint32', ['pointer']],
    clang_getDiagnostic: ['pointer', ['pointer', 'uint32']],
    clang_getDiagnosticSetFromTU: ['pointer', ['pointer']],
    clang_disposeDiagnostic: ['void', ['pointer']],
    clang_formatDiagnostic: [CXString, ['pointer', 'uint32']],
    clang_defaultDiagnosticDisplayOptions: ['uint32', []],
    clang_getDiagnosticSeverity: ['uint32', ['pointer']],
    clang_getDiagnosticLocation: [CXSourceLocation, ['pointer']],
    clang_getDiagnosticSpelling: [CXString, ['pointer']],
    clang_getDiagnosticOption: [CXString, ['pointer', CXStringPtr]],
    clang_getDiagnosticCategory: ['uint32', ['pointer']],
    clang_getDiagnosticCategoryName: [CXString, ['uint32']],
    clang_getDiagnosticCategoryText: [CXString, ['pointer']],
    clang_getDiagnosticNumRanges: ['uint32', ['pointer']],
    clang_getDiagnosticRange: [CXSourceRange, ['pointer', 'uint32']],
    clang_getDiagnosticNumFixIts: ['uint32', ['pointer']],
    clang_getDiagnosticFixIt: [CXString, ['pointer', 'uint32', CXSourceRangePtr]],
    clang_getTranslationUnitSpelling: [CXString, ['pointer']],
    clang_createTranslationUnitFromSourceFile: ['pointer', ['pointer', 'string', 'int32', 'pointer', 'uint32', 'pointer']],
    clang_createTranslationUnit: ['pointer', ['pointer', 'string']],
    clang_defaultEditingTranslationUnitOptions: ['uint32', []],
    clang_parseTranslationUnit: ['pointer', ['pointer', 'string', 'pointer', 'int32', 'pointer', 'uint32', 'uint32']],
    clang_defaultSaveOptions: ['uint32', ['pointer']],
    clang_saveTranslationUnit: ['int32', ['pointer', 'string', 'uint32']],
    clang_disposeTranslationUnit: ['void', ['pointer']],
    clang_defaultReparseOptions: ['uint32', ['pointer']],
    clang_reparseTranslationUnit: ['int32', ['pointer', 'uint32', 'pointer', 'uint32']],
    clang_getTUResourceUsageName: ['string', ['uint32']],
    clang_getCXTUResourceUsage: [CXTUResourceUsage, ['pointer']],
    clang_disposeCXTUResourceUsage: ['void', [CXTUResourceUsage]],
    clang_getNullCursor: [CXCursor, []],
    clang_getTranslationUnitCursor: [CXCursor, ['pointer']],
    clang_equalCursors: ['uint32', [CXCursor, CXCursor]],
    clang_Cursor_isNull: ['int32', [CXCursor]],
    clang_hashCursor: ['uint32', [CXCursor]],
    clang_getCursorKind: ['uint32', [CXCursor]],
    clang_isDeclaration: ['uint32', ['uint32']],
    clang_isReference: ['uint32', ['uint32']],
    clang_isExpression: ['uint32', ['uint32']],
    clang_isStatement: ['uint32', ['uint32']],
    clang_isAttribute: ['uint32', ['uint32']],
    clang_isInvalid: ['uint32', ['uint32']],
    clang_isTranslationUnit: ['uint32', ['uint32']],
    clang_isPreprocessing: ['uint32', ['uint32']],
    clang_isUnexposed: ['uint32', ['uint32']],
    clang_getCursorLinkage: ['uint32', [CXCursor]],
    clang_getCursorAvailability: ['uint32', [CXCursor]],
    clang_getCursorLanguage: ['uint32', [CXCursor]],
    clang_Cursor_getTranslationUnit: ['pointer', [CXCursor]],
    clang_createCXCursorSet: ['pointer', []],
    clang_disposeCXCursorSet: ['void', ['pointer']],
    clang_CXCursorSet_contains: ['uint32', ['pointer', CXCursor]],
    clang_CXCursorSet_insert: ['uint32', ['pointer', CXCursor]],
    clang_getCursorSemanticParent: [CXCursor, [CXCursor]],
    clang_getCursorLexicalParent: [CXCursor, [CXCursor]],
    clang_getOverriddenCursors: ['void', [CXCursor, 'pointer', 'pointer']],
    clang_disposeOverriddenCursors: ['void', [CXCursorPtr]],
    clang_getIncludedFile: ['pointer', [CXCursor]],
    clang_getCursor: [CXCursor, ['pointer', CXSourceLocation]],
    clang_getCursorLocation: [CXSourceLocation, [CXCursor]],
    clang_getCursorExtent: [CXSourceRange, [CXCursor]],
    clang_getCursorType: [CXType, [CXCursor]],
    clang_getTypedefDeclUnderlyingType: [CXType, [CXCursor]],
    clang_getEnumDeclIntegerType: [CXType, [CXCursor]],
    clang_getEnumConstantDeclValue: ['longlong', [CXCursor]],
    clang_getEnumConstantDeclUnsignedValue: ['ulonglong', [CXCursor]],
    clang_Cursor_getNumArguments: ['int32', [CXCursor]],
    clang_Cursor_getArgument: [CXCursor, [CXCursor, 'uint32']],
    clang_equalTypes: ['uint32', [CXType, CXType]],
    clang_getCanonicalType: [CXType, [CXType]],
    clang_isConstQualifiedType: ['uint32', [CXType]],
    clang_isVolatileQualifiedType: ['uint32', [CXType]],
    clang_isRestrictQualifiedType: ['uint32', [CXType]],
    clang_getPointeeType: [CXType, [CXType]],
    clang_getTypeDeclaration: [CXCursor, [CXType]],
    clang_getDeclObjCTypeEncoding: [CXString, [CXCursor]],
    clang_getTypeKindSpelling: [CXString, ['uint32']],
    clang_getFunctionTypeCallingConv: ['uint32', [CXType]],
    clang_getResultType: [CXType, [CXType]],
    clang_getNumArgTypes: ['int32', [CXType]],
    clang_getArgType: [CXType, [CXType, 'uint32']],
    clang_isFunctionTypeVariadic: ['uint32', [CXType]],
    clang_getCursorResultType: [CXType, [CXCursor]],
    clang_isPODType: ['uint32', [CXType]],
    clang_getElementType: [CXType, [CXType]],
    clang_getNumElements: ['longlong', [CXType]],
    clang_getArrayElementType: [CXType, [CXType]],
    clang_getArraySize: ['longlong', [CXType]],
    clang_isVirtualBase: ['uint32', [CXCursor]],
    clang_getCXXAccessSpecifier: ['uint32', [CXCursor]],
    clang_getNumOverloadedDecls: ['uint32', [CXCursor]],
    clang_getOverloadedDecl: [CXCursor, [CXCursor, 'uint32']],
    clang_getIBOutletCollectionType: [CXType, [CXCursor]],
    clang_visitChildren: ['uint32', [CXCursor, 'pointer', ref.types.Object]],
    clang_visitChildrenWithBlock: ['uint32', [CXCursor, CXCursorVisitorBlock]],
    clang_getCursorUSR: [CXString, [CXCursor]],
    clang_constructUSR_ObjCClass: [CXString, ['string']],
    clang_constructUSR_ObjCCategory: [CXString, ['string', 'string']],
    clang_constructUSR_ObjCProtocol: [CXString, ['string']],
    clang_constructUSR_ObjCIvar: [CXString, ['string', CXString]],
    clang_constructUSR_ObjCMethod: [CXString, ['string', 'uint32', CXString]],
    clang_constructUSR_ObjCProperty: [CXString, ['string', CXString]],
    clang_getCursorSpelling: [CXString, [CXCursor]],
    clang_Cursor_getSpellingNameRange: [CXSourceRange, [CXCursor, 'uint32', 'uint32']],
    clang_getCursorDisplayName: [CXString, [CXCursor]],
    clang_getCursorReferenced: [CXCursor, [CXCursor]],
    clang_getCursorDefinition: [CXCursor, [CXCursor]],
    clang_isCursorDefinition: ['uint32', [CXCursor]],
    clang_getCanonicalCursor: [CXCursor, [CXCursor]],
    clang_Cursor_getObjCSelectorIndex: ['int32', [CXCursor]],
    clang_CXXMethod_isStatic: ['uint32', [CXCursor]],
    clang_CXXMethod_isVirtual: ['uint32', [CXCursor]],
    clang_getTemplateCursorKind: ['uint32', [CXCursor]],
    clang_getSpecializedCursorTemplate: [CXCursor, [CXCursor]],
    clang_getCursorReferenceNameRange: [CXSourceRange, [CXCursor, 'uint32', 'uint32']],
    clang_getTokenKind: ['uint32', [CXToken]],
    clang_getTokenSpelling: [CXString, ['pointer', CXToken]],
    clang_getTokenLocation: [CXSourceLocation, ['pointer', CXToken]],
    clang_getTokenExtent: [CXSourceRange, ['pointer', CXToken]],
    clang_tokenize: ['void', ['pointer', CXSourceRange, 'pointer', 'pointer']],
    clang_annotateTokens: ['void', ['pointer', CXTokenPtr, 'uint32', CXCursorPtr]],
    clang_disposeTokens: ['void', ['pointer', CXTokenPtr, 'uint32']],
    clang_getCursorKindSpelling: [CXString, ['uint32']],
    clang_getDefinitionSpellingAndExtent: ['void', [CXCursor, 'pointer', 'pointer', 'pointer', 'pointer', 'pointer', 'pointer']],
    clang_enableStackTraces: ['void', []],
    clang_executeOnThread: ['void', ['pointer', 'pointer', 'uint32']],
    clang_getCompletionChunkKind: ['uint32', ['pointer', 'uint32']],
    clang_getCompletionChunkText: [CXString, ['pointer', 'uint32']],
    clang_getCompletionChunkCompletionString: ['pointer', ['pointer', 'uint32']],
    clang_getNumCompletionChunks: ['uint32', ['pointer']],
    clang_getCompletionPriority: ['uint32', ['pointer']],
    clang_getCompletionAvailability: ['uint32', ['pointer']],
    clang_getCompletionNumAnnotations: ['uint32', ['pointer']],
    clang_getCompletionAnnotation: [CXString, ['pointer', 'uint32']],
    clang_getCompletionParent: [CXString, ['pointer', 'pointer']],
    clang_getCursorCompletionString: ['pointer', [CXCursor]],
    clang_defaultCodeCompleteOptions: ['uint32', []],
    clang_codeCompleteAt: [CXCodeCompleteResultsPtr, ['pointer', 'string', 'uint32', 'uint32', 'pointer', 'uint32', 'uint32']],
    clang_sortCodeCompletionResults: ['void', [CXCompletionResultPtr, 'uint32']],
    clang_disposeCodeCompleteResults: ['void', [CXCodeCompleteResultsPtr]],
    clang_codeCompleteGetNumDiagnostics: ['uint32', [CXCodeCompleteResultsPtr]],
    clang_codeCompleteGetDiagnostic: ['pointer', [CXCodeCompleteResultsPtr, 'uint32']],
    clang_codeCompleteGetContexts: ['ulonglong', [CXCodeCompleteResultsPtr]],
    clang_codeCompleteGetContainerKind: ['uint32', [CXCodeCompleteResultsPtr, 'pointer']],
    clang_codeCompleteGetContainerUSR: [CXString, [CXCodeCompleteResultsPtr]],
    clang_codeCompleteGetObjCSelector: [CXString, [CXCodeCompleteResultsPtr]],
    clang_getClangVersion: [CXString, []],
    clang_toggleCrashRecovery: ['void', ['uint32']],
    clang_getInclusions: ['void', ['pointer', 'pointer', 'pointer']],
    clang_getRemappings: ['pointer', ['string']],
    clang_getRemappingsFromFileList: ['pointer', ['pointer', 'uint32']],
    clang_remap_getNumFiles: ['uint32', ['pointer']],
    clang_remap_getFilenames: ['void', ['pointer', 'uint32', CXStringPtr, CXStringPtr]],
    clang_remap_dispose: ['void', ['pointer']],
    clang_findReferencesInFile: ['void', [CXCursor, 'pointer', CXCursorAndRangeVisitor]],
    clang_index_isEntityObjCContainerKind: ['int32', ['uint32']],
    clang_index_getObjCContainerDeclInfo: [CXIdxObjCContainerDeclInfoPtr, [CXIdxDeclInfoPtr]],
    clang_index_getObjCInterfaceDeclInfo: [CXIdxObjCInterfaceDeclInfoPtr, [CXIdxDeclInfoPtr]],
    clang_index_getObjCCategoryDeclInfo: [CXIdxObjCCategoryDeclInfoPtr, [CXIdxDeclInfoPtr]],
    clang_index_getObjCProtocolRefListInfo: [CXIdxObjCProtocolRefListInfoPtr, [CXIdxDeclInfoPtr]],
    clang_index_getObjCPropertyDeclInfo: [CXIdxObjCPropertyDeclInfoPtr, [CXIdxDeclInfoPtr]],
    clang_index_getIBOutletCollectionAttrInfo: [CXIdxIBOutletCollectionAttrInfoPtr, [CXIdxAttrInfoPtr]],
    clang_index_getCXXClassDeclInfo: [CXIdxCXXClassDeclInfoPtr, [CXIdxDeclInfoPtr]],
    clang_index_getClientContainer: ['pointer', [CXIdxContainerInfoPtr]],
    clang_index_setClientContainer: ['void', [CXIdxContainerInfoPtr, 'pointer']],
    clang_index_getClientEntity: ['pointer', [CXIdxEntityInfoPtr]],
    clang_index_setClientEntity: ['void', [CXIdxEntityInfoPtr, 'pointer']],
    clang_IndexAction_create: ['pointer', ['pointer']],
    clang_IndexAction_dispose: ['void', ['pointer']],
    clang_indexSourceFile: ['int32', ['pointer', 'pointer', IndexerCallbacksPtr, 'uint32', 'uint32', 'string', 'pointer', 'int32', 'pointer', 'uint32', 'pointer', 'uint32']],
    clang_indexTranslationUnit: ['int32', ['pointer', 'pointer', IndexerCallbacksPtr, 'uint32', 'uint32', 'pointer']],
    clang_indexLoc_getFileLocation: ['void', [CXIdxLoc, 'pointer', 'pointer', 'pointer', 'pointer', 'pointer']],
    clang_indexLoc_getCXSourceLocation: [CXSourceLocation, [CXIdxLoc]],
});
